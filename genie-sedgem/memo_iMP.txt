Memo for iMP

A1. OpenBLAS library is needed
    How to install (see also instruction at iMP repository in GitHub https://github.com/imuds/iMP):
        1. download: http://www.openblas.net/ -> TAR
        2. tar zxvf OpenBLAS-0.2.20.tar.gz
        3. cd OpenBLAS-0.2.20
        4. make BINARY=64 CC="gcc -m64" FC="gfortran -m64"
        5. su
        6. make PREFIX=/usr/local install

    If you get the error 'libopenblas.so.0: cannot open shared object file: No such file or directory' then try the following:
        1. sudo apt-get install libopenblas-base
        2. export LD_LIBRARY_PATH=/usr/lib/openblas-base/

A2. Compiling cGENIE with iMP on a cluster
    	1. edit the openBLAS options for the cluster-specific library name and path in cgenie.muffin/genie-main/makefile.arc
        2. add the following lines in the .bashrc file in your home directory with the relevant name of the openBLAS installation, e.g., openBLAS-0.2.20:
            module add openBLAS-#-#-##   

A3. Compiling cGENIE with iMP on a local computer
    	1. edit the openBLAS options in cgenie.muffin/genie-main/makefile.arc: comment out lines 556-558 and uncomment line 560
    
B. Choose option 'kanzaki2019trs' for sg_par_sed_diagen_CaCO3opt in userconfig files.
    Currently you can also play around with fraction of aragonite 
        by changing the parameter 'sg_par_sed_kanzaki2019_arg' from 0 (calcite only) to 1 (aragonite only). 
        
    More specifically:
    to run the coupled model (i.e., cGENIE + iMP) for spin-up,
        1) Do usual closed system spin-up first (EXAMPLE.worbe2.RidgwellHargreaves1997_S36x36.SPIN1 for 20000 yr)
        2) Run the coupled model for closed system spin-up (EXAMPLE.worbe2.RH1997_S36x36_iMP_arg.SPIN1 for 1000 yr)
        3) Run the coupled model for open system spin-up (EXAMPLE.worbe2.RH1997_S36x36_iMP_arg.SPIN2 for 20000 yr)

    E.g.,
        1) ./runmuffin_sed10yr.sh cgenie.eb_go_gs_ac_bg_sg_rg.worbe2.BASE / EXAMPLE.worbe2.RidgwellHargreaves1997_S36x36.SPIN1 20000
        2) ./runmuffin_sed10yr.sh cgenie.eb_go_gs_ac_bg_sg_rg.worbe2.BASE / EXAMPLE.worbe2.RH1997_S36x36_iMP_arg.SPIN1 1000 EXAMPLE.worbe2.RidgwellHargreaves1997_S36x36.SPIN1
        3) ./runmuffin_sed10yr.sh cgenie.eb_go_gs_ac_bg_sg_rg.worbe2.BASE / EXAMPLE.worbe2.RH1997_S36x36_iMP_arg.SPIN2 20000 EXAMPLE.worbe2.RH1997_S36x36_iMP_arg.SPIN1

    *** Note that iMP tries to reach steady state when called for the first time 
    (takes a huge time step, 10^8 yr, only when called for the first time; 
    after that takes the time step for sediment module, i.e., 10 yr in the above example)
    so 1000 yr is not necessary for closed system spin-up with iMP 
    (e.g., you can see no difference between 10 yr result and 1000 yr results in iMP). ***

    *** Also note that iMP is much slower than sedgem so run only once 10 year 
    which is realized by using 'runmuffin_sed10yr.sh' instead of 'runmuffin.sh' ***

    *** Final note: display should show a lot of warnings while running but just ignore these for now ***


C. Analyze the results. 
    iMP provides CaCO3 dissolution flux and change in this flux is reflected in all output as in usual cGENIE simulations.

    Sediment profiles calculated by iMP is stored in sedgem/imp/profiles directory.
    Global maps of sediment composition are stored in sedgem/imp directory.
    I have not stored these output in netCDF but currently as text data.

    Those files are:
        ccbml-xxx (CaCO3 comp. in wt% at the bottom of mixed layer)
        ccdis-xxx (CaCO3 dissolution flux in umol cm-2 yr-1)
        ccsfc-xxx (CaCO3 comp. in wt% at the seawater-sediment interface)
        ccsfcave-xxx (CaCO3 average comp. in wt% within mixed layer)
        errf-xxx (relative error in total volume of solid sediment, used as an indicator of overall covergence)
        om-xxx (OM comp. in wt% at the bottom of mixed layer)
        pt-xxx (Detrital material comp. in wt% at the bottom of mixed layer)

    xxx includes information regarding CaCO3 species and time of recording:
    currently sp001 means calcite species while sp002 means aragonite.
    Other number (e.g., 100) means time in yr but divided by 10 (e.g., 100 means 1000 yr) (I do not remember why I did this...).


D. Extra stuffs 
    One can also change dissolution rate constants of two different classes of CaCO3 particles
    to run such models, you need to do the following parameterizations in userconfig files:
        sg_par_sed_diagen_CaCO3opt = 'kanzaki2019trs'
        sg_par_sed_kanzaki2019_arg = 0.0           # no aragonite (although you can use aragonite)
        sg_par_sed_kanzaki2019_dissc2frc=0.5       # rain flux fraction of class#2; here 0.5 means a half of total rain flux is assigned as class#2  
        sg_par_sed_kanzaki2019_dissc1=100.0        # a factor with which a reference rate constant is multiplied for class#1 CaCO3 particles
        sg_par_sed_kanzaki2019_dissc2=0.01         # a factor with which a reference rate constant is multipled for class#2 CaCO3 particles
    Or you can choose different bioturbation depths for different classes of CaCO3 particles 
    In userconfig files, you need specify:
        sg_par_sed_diagen_CaCO3opt = 'kanzaki2019trs'
        sg_par_sed_kanzaki2019_arg = 0.0           # no aragonite (although you can use aragonite)
        sg_par_sed_kanzaki2019_dissc2frc=0.5       # rain flux fraction of class#2; here 0.5 means a half of total rain flux is assigned as class#2  
        sg_par_sed_kanzaki2019_biotd1=1.0          # a factor with which a reference bioturbation depth is multipled for class#1 CaCO3 particles
        sg_par_sed_kanzaki2019_biotd2=2.0          # a factor with which a reference bioturbation depth is multipled for class#2 CaCO3 particles
    These kinds of simulations run OK for spin-ups but not necessarily transient simulations. 
    
    Follow experimental procedures (A-C) explained above for experiments with different fractions of aragonite.  